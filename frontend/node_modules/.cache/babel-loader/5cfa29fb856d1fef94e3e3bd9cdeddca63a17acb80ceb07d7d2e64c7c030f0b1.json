{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bojo1\\\\OneDrive\\\\Desktop\\\\HomeScope\\\\frontend\\\\src\\\\components\\\\TrendsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrendsChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Fetch the JSON data on component mount\n  useEffect(() => {\n    fetch('/market_trends_data.json') // Ensure this path is correct\n    .then(response => response.json()).then(jsonData => {\n      if (Array.isArray(jsonData)) {\n        setData(jsonData); // Only set data if it's an array\n      } else {\n        console.error(\"Expected array data, but received:\", jsonData);\n      }\n    }).catch(error => console.error(\"Error fetching JSON data:\", error));\n  }, []);\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Chart.js data structure\n  const chartData = {\n    labels: data.map(item => item[\"Month of Period End\"]),\n    datasets: [{\n      label: 'Median Sale Price',\n      data: data.map(item => item[\"Median Sale Price\"]),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(TrendsChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = TrendsChart;\nexport default TrendsChart;\nvar _c;\n$RefreshReg$(_c, \"TrendsChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","TrendsChart","_s","data","setData","fetch","then","response","json","jsonData","Array","isArray","console","error","catch","length","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","item","datasets","label","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/bojo1/OneDrive/Desktop/HomeScope/frontend/src/components/TrendsChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst TrendsChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  // Fetch the JSON data on component mount\r\n  useEffect(() => {\r\n    fetch('/market_trends_data.json') // Ensure this path is correct\r\n      .then((response) => response.json())\r\n      .then((jsonData) => {\r\n        if (Array.isArray(jsonData)) {\r\n          setData(jsonData); // Only set data if it's an array\r\n        } else {\r\n          console.error(\"Expected array data, but received:\", jsonData);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching JSON data:\", error));\r\n  }, []);\r\n\r\n  if (data.length === 0) {\r\n    return <p>Loading data...</p>;\r\n  }\r\n\r\n  // Chart.js data structure\r\n  const chartData = {\r\n    labels: data.map((item) => item[\"Month of Period End\"]),\r\n    datasets: [\r\n      {\r\n        label: 'Median Sale Price',\r\n        data: data.map((item) => item[\"Median Sale Price\"]),\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Line data={chartData} />;\r\n};\r\n\r\nexport default TrendsChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAAA,CAC/BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3BL,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEJ,QAAQ,CAAC;MAC/D;IACF,CAAC,CAAC,CACDK,KAAK,CAAED,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIV,IAAI,CAACY,MAAM,KAAK,CAAC,EAAE;IACrB,oBAAOf,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B;;EAEA;EACA,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEnB,IAAI,CAACoB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACvDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,mBAAmB;MAC1BvB,IAAI,EAAEA,IAAI,CAACoB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,mBAAmB,CAAC,CAAC;MACnDG,WAAW,EAAE,uBAAuB;MACpCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAO5B,OAAA,CAACF,IAAI;IAACK,IAAI,EAAEkB;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAAClB,EAAA,CAnCID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}